cd .local
cd state
cd wireplumber
ls -lah .cache
ls -lah .*
cd .cache
cd ../flatpak
cd system-cache
cd summaries
cat flathub-x86_64-e309281b7e85ef853953aa460335c0989d4adfc9e410fae8ca77417094e39d1b.sub
cd /
cd etc/zsh
sudo nano zshenv
echo $HISTFILE
cat .zhistory
mkdir aliases
touch aliases
rd
rmdir
rmdir --help
nano aliases
print $fpath
cd .config/zsh
mkdir completion
cd completion
touch completion.zsh
echo $DOTFILES
compinit
cd aliases
mv aliases aliases.zsh
git
git --version
mkdir plugins
cd plugins
git clone https://github.com/zsh-users/zsh-autosuggestions .
rm *
rmdir spec
rm -r *
git clone https://github.com/zsh-users/zsh-autosuggestions ./zsh-autosuggestions
ls zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-syntax-highlighting ./zsh-syntax-highlighting
git clone https://github.com/zsh-users/zsh-completions ./zsh-completions
less README.md
cd zsh-autosuggestions
cat README.md
nano README.md
nano INSTALL.md
ls zsh-syntax-highlighting
ls zsh-syntax-highlighting/
cd /.config/zsh/plugins
cd zsh-completions
nano zsh-completions-howto.org
cd src
ls -lah
ls -lah _tho
ls -lah _tho*
ls -lah com*
ls -lah _com*
ls -lah .com*
cd ..
ls -lah | less
cd .config/zsh/plugins
cd .local/
cd share
cd cinnamon
..
.
compinstall
cat evolution
cd fonts
cd Unknown\ Vendor
cd TrueType
cd Symbols\ Nerd\ Font
cat Symbols_Nerd_Font_Regular.ttf
cd .config
zmodload
zmodload zsh/compete
zmodload zsh/complete
?
$?
%?
echo $SHELL
cd .local/share
cd espressif
cd
sudo apt-get install git wget flex bison gperf python3 python3-pip python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0
sudo cp --update=none /home/mike/.local/share/espressif/.espressif/tools/openocd-esp32/v0.12.0-esp32-20250422/openocd-esp32/share/openocd/contrib/60-openocd.rules /etc/udev/rules.d
cat /etc/udev/rules.d
cat /etc/udev/rules.d/60-openocd.rules
xsetwacom --list Button
xsetwacom --list Buttons
xsetwacom --list buttons
xsetwacom --list button
xsetwacom --help
xsetwacom --list modifiers
xsetwacom --list parameters
xsetwacom --list PAD
xsetwacom --get PAD
xsetwacom --get "PAD"
xsetwacom --list devices
xsetwacom --set "Wacom Intuos BT S Pad" Button 0 key "esc"
xsetwacom --set "Wacom Intuos BT S Pad pad" Button 0 key "esc"
xsetwacom --set "Wacom Intuos BT S Pad pad" Button 1 key "esc"
xsetwacom --set "Wacom Intuos BT S Pad pad" Button 2 key "Ctrl-z"
xsetwacom --set "Wacom Intuos BT S Pad pad" Button 2 key "ctrl-z"
xsetwacom --set "Wacom Intuos BT S Pad pad" Button 2 key "ctrl+z"
xsetwacom --get "Wacom Intuos BT S Pad pad"
xsetwacom --get "Wacom Intuos BT S Pad pad" parameter
xsetwacom --get "Wacom Intuos BT S Pad" parameter
'/home/mike/.local/share/espressif/.espressif/python_env/idf6.0_py3.12_env/bin/python' '/home/mike/.local/share/espressif/esp/master/esp-idf/tools/idf_monitor.py' -p /dev/ttyS0 -b 115200 --toolchain-prefix xtensa-esp32s3-elf- --make ''/home/mike/.local/share/espressif/.espressif/python_env/idf6.0_py3.12_env/bin/python' '/home/mike/.local/share/espressif/esp/master/esp-idf/tools/idf.py'' --target esp32s3 '/home/mike/ESP32Projects/base/build/base.elf'
export IDF_PATH='/home/mike/.local/share/espressif/esp/master/esp-idf'
'/home/mike/.local/share/espressif/.espressif/python_env/idf6.0_py3.12_env/bin/python' '/home/mike/.local/share/espressif/esp/master/esp-idf/tools/idf_monitor.py' -p /dev/ttyACM0 -b 115200 --toolchain-prefix xtensa-esp32s3-elf- --make ''/home/mike/.local/share/espressif/.espressif/python_env/idf6.0_py3.12_env/bin/python' '/home/mike/.local/share/espressif/esp/master/esp-idf/tools/idf.py'' --target esp32s3 '/home/mike/ESP32Projects/base/build/base.elf'
export IDF_PATH="/home/mike/.local/share/espressif/esp/master/esp-idf"
cd ~/.local/share/espressif/esp/master/esp-idf
cat README.md | less
zsh install.sh
zsh export.sh
cd workshop_encoder
exec zsh
python3 idf.py build
git clone https://github.com/mikeochtman/workshop_encoder .
env | grep esp
env | grep idf
env | grep idf*
nano .zshrc
source nano .zshrc
source .zshrc
cat $1
cat @!
cat $!
cat &!
cat %!
export IDF_PATH
export IDF_PATH=""
env
echo $IDF_PATH
find / -name="60-openocd.d"
find / -name "60-openocd.d"
find /etc/udev/ -name "60-openocd.d"
cd /etc/udev
cd rules.d
sudo cp 60-openocd.rules $HOME/.espressif/tools/openocd-esp32/v0.12.0-esp32-20241016/openocd-esp32/share/openocd/contrib 
cd  esp/v5.4.1/esp-idf
ls *.py
cat export.sh | less
xed export.sh
bash
source export.sh
cd ~/ESP32Projects/
~
cd ~
cd ESP32Projects/
cd displayLVGL/
cd build
cd log
xed idf_py_stderr_output_27320 
cd ../..
pwd
xed CMakeLists.txt 
idf.py build
cmake --version
cd ESP32Projects/workshop_encoder/components/wse_led
cp Kconfig.projbuild ~/ESP32Projects/displayLVGL/components/wse-led
cmake --help-policy CMP0058
cd ESP32Projects
git clone https://github.com/mikeochtman/workshop_encoder 
lsl /etc/skel
lsl /etc/skel/.config
lsl /etc/skel/.local
lsl /etc/skel/.local/share
lsl /etc/skel/.local/share/applications
lsl /etc/skel/.local/share/ice
idf.py
python3 idf.py
'/home/mike/.espressif/python_env/idf6.0_py3.12_env/bin/python' '/home/mike/esp/master/esp-idf/tools/idf_monitor.py' -p /dev/ttyACM0 -b 115200 --toolchain-prefix xtensa-esp32s3-elf- --make ''/home/mike/.espressif/python_env/idf6.0_py3.12_env/bin/python' '/home/mike/esp/master/esp-idf/tools/idf.py'' --target esp32s3 '/home/mike/ESP32Projects/displayLVGL/build/testing.elf'
export IDF_PATH='/home/mike/esp/master/esp-idf'
'/home/mike/.espressif/python_env/idf6.0_py3.12_env/bin/python' '/home/mike/esp/master/esp-idf/tools/idf_monitor.py' -p /dev/ttyACM0 -b 115200 --toolchain-prefix xtensa-esp32s3-elf- --make ''/home/mike/.espressif/python_env/idf6.0_py3.12_env/bin/python' '/home/mike/esp/master/esp-idf/tools/idf.py'' --target esp32s3 '/home/mike/ESP32Projects/i2c_oled/build/i2c_oled.elf'
\

clear
sudo apt install nvim
sudo apt install neovim
sudo apt install neovim ctags vim-scripts python-greenlet-dev python-greenlet-doc
sudo apt install neovim vim-scripts python-greenlet-dev python-greenlet-doc
sudo apt install neovim vim-scripts python-greenlet-dev python-greenlet-doc perlsgml libtemplate-perl
sudo apt install neovim vim-scripts python-greenlet-dev python-greenlet-doc libtemplate-perl
nvim
sudo apt update && sudo apt upgrade
sudo apt install terminator
terminator
sudo apt install fzf
du
builtin --help
builtin ls
builtin --list
builtin -list
builtin -l
echo foo
echo foo | sed 's/foo/bar'
echo foo | sed --debug 's/foo/bar/'
echo foo | sed 's/foo/bar/'
man sed
info sed
bye
ext
q
alias
ls -lathr
fzf
nvim .zshrc
nvim prompts
cd scripts
touch history
nvim history
cat history
touch prompts
lsl
cd $ZDOTDIR
ls
cat .zshrc
xed .zshrc
exit
